<!DOCTYPE HTML>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
 <meta name="generator" content="Adobe RoboHelp 2015" />
<title>例：データバインディング</title>
<link rel="StyleSheet" href="default.css" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="template/scripts/rh.min.js"></script>
<script type="text/javascript" src="template/scripts/common.min.js"></script>
<script type="text/javascript" src="template/scripts/topic.min.js"></script>
<script type="text/javascript" src="template/scripts/constants.js"></script>
<script type="text/javascript" src="template/scripts/utils.js"></script>
<script type="text/javascript" src="template/scripts/mhutils.js"></script>
<script type="text/javascript" src="template/scripts/mhlang.js"></script>
<script type="text/javascript" src="template/scripts/mhver.js"></script>
<script type="text/javascript" src="template/scripts/settings.js"></script>
<script type="text/javascript" src="template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = ".";
gCommonRootRelPath = ".";
gTopicId = "5.3.1.0_6";
</script>
 <meta name="topic-breadcrumbs" content="スクリプトとプラグインのリファレンス > ゲーム内UIに関するドキュメンテーション > はじめに" />
</head>

<body>
<script type="text/javascript" src="./ehlpdhtm.js"></script>

<div style="width: 100%; position: relative;" id="header">
	<p class="Topic_Heading">例：データバインディング</p>
</div>
<p>&#160;</p>
<p><span class="Topic_Start">前</span>回の例で基本を学びましたので、今回の例ではもう少し高度な内容、データバインディングに挑戦してみましょう。データバインディングを使うと、ゲーム設定やデータベースのキャラクターなどの</p>
<p>バックグラウンドデータを表示あるいは変更できるようになります。バインディングはより複雑な内容になりますので、<a href="igui_doc/index.html">ゲーム内のUI 
 APIリファレンス</a>と</p>
<p>レイアウトやテンプレートをチェックして、バインディングについて詳しく読んでおきましょう。</p>
<p>&#160;</p>
<p>ゲーム内UIのデザインを、ロジックを変えることなく修正したいだけならば、バインディングの一部を知っているだけで十分です。</p>
<p>何か新しいことをしたい場合のみ、バインディングについてさらによく理解する必要があります。</p>
<p>&#160;</p>
<p>まずは次の例を見てみましょう。</p>
<p>&#160;</p>
<p><span class="Code">ui.UIManager.layouts.titleLayout = {</span></p>
<p><span class="Code">&#160;&#160;&quot;type&quot;: &quot;ui.FreeLayout&quot;,</span></p>
<p><span class="Code">&#160;&#160;&quot;frame&quot;: [0, 0, Graphics.width, 
 Graphics.height],</span></p>
<p><span class="Code">&#160;&#160;&quot;controls&quot;: [</span></p>
<p><span class="Code">&#160;&#160;&#160;&#160;&#160;&#160;{</span></p>
<p><span class="Code">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;type&quot;: 
 &quot;ui.Text&quot;,</span></p>
<p><span class="Code">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;sizeToFit&quot;: 
 true,</span></p>
<p><span class="Code">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;bindings&quot;: 
 [{ &quot;sourceField&quot;: &quot;$dataFields.database.characters[0].name&quot;, 
 &quot;targetField&quot;: &quot;o.text&quot; }]</span></p>
<p><span class="Code">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;alignmentX&quot;: 
 &quot;center&quot;,</span></p>
<p><span class="Code">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;alignmentY&quot;: 
 &quot;center&quot;</span></p>
<p><span class="Code">&#160;&#160;&#160;&#160;&#160;&#160;}</span></p>
<p><span class="Code">&#160;&#160;]</span></p>
<p><span class="Code">}</span></p>
<p>&#160;</p>
<p>上記のタイトルレイアウトを適用してテストプレイすると、最初のキャラクターの名前が中央にあるだけの真っ暗な画面が表示されます。</p>
<p>これは、最初のキャラクターの名前のプロパティを、テキストコントロールのテキストプロパティにバインドしたためです。</p>
<p>バインディングのプロパティを使うと、コントロールに複数のバインディングを追加できます。では、バインディングのプロパティを見てみましょう。</p>
<p>&#160;</p>
<ul style="list-style: disc;">
	<li style="margin-left: -20px;"><p style="font-weight: bold;">sourceField</p></li>
</ul>
<p>ターゲットフィールドに書き込みたいソースフィールドを定義します。今回の場合、バインディング構文を使用して次のソースフィールドを定義します。</p>
<p>&#160;</p>
<p><span class="Code">&quot;$dataFields.database.characters[0].name&quot;</span></p>
<p>&#160;</p>
<p>「$dataFields」により、そのレイアウトの、定義されているデータソースにアクセスします。通常は、それが「DataSource_Default」スクリプトで定義された既定のデータソースです。</p>
<p>それについては後ほど確認しましょう。「database」によりデータベースにアクセスし、「characters」によりキャラクターコレクションにアクセスします。</p>
<p>「[&lt;index&gt;]」により、どのキャラクターにアクセスしたいか示します。今回の場合、この値は「0」ですので、次の「name」を使って最初のキャラクターの名前にアクセスします。</p>
<p>&#160;</p>
<ul style="list-style: disc;">
	<li style="font-weight: bold; margin-left: -20px;"><p style="font-weight: bold;">targetField</p></li>
</ul>
<p>ここではターゲットフィールドを定義します。ソースフィールドの値はこのフィールドに書き込まれます。ここでは、ターゲットフィールドには「o.text」を定義しました。</p>
<p>「o」により、バインディングエクスプレッション（この場合テキストコントロール）が実行される現在のオブジェクトにアクセスしたいことを示します。</p>
<p>また「text」によりテキストプロパティに書き込みたいことを示します。このため、キャラクターの名前が画面に表示されたわけです。</p>
<p>&#160;</p>
<p>内部的には、バインディングエクスプレッションは普通のJavaScriptの計算式です。しかし、バインディングエクスプレッションを流用して別のJavaScriptのコードを</p>
<p>実行しようとしたりしないでください。バインディングエクスプレッションでできることに満足できない方は、次で説明する「計算式」を使って、独自のコンポーネントを書いてください。</p>
</body>
</html>
